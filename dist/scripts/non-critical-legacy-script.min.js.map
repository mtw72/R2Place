{"version":3,"sources":["navbar.js","accordion.js","carousel.js","menu.js","formVariables.js","formDefaultDate.js","formDefaultTime.js","formSelect.js","formValidation.js","popUpMessage.js","formTextarea.js","footer.js"],"names":["screenWidth","currentScrollPos","navbar","document","getElementById","navbarToggler","querySelector","navContainer","navList","navLinks","querySelectorAll","home","r2link","menuTab1","getElementsByClassName","accordionButton1","addEventListener","event","classList","toggle","style","maxHeight","togglerAriaNotExpanded","navLinkAriaHidden","scrollHeight","focus","togglerAriaExpanded","navLinkAriaNotHidden","stopPropagation","closeNavbar","window","checkScreenSize","debounce","adjustHeroImagePadding","innerWidth","top","prevScrollPos","scrollY","func","wait","timeout","_this","this","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","setAttribute","togglerAriaRemoved","removeAttribute","i","navLinkAriaRemoved","contains","remove","paddingTop","focusedElement","activeElement","isNavLinkFocused","prototype","includes","call","key","preventDefault","shiftKey","nextIndex","indexOf","prevIndex","nextIndexRight","prevIndexLeft","menuAccordion","openOrClosePanels","handlePanelState","button","isActive","isSmallScreen","menuPanel","nextElementSibling","add","border","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","slice","constructor","name","from","test","iter","Symbol","iterator","isArray","len","arr2","memo","dynamicFrame","time","timeInterval","carouselTrack","slides","prevButton","nextButton","playButton","pauseButton","progressList","progressContainers","progressBars","bar1","bar2","bar3","currentProgressContainer","currentProgressBar","width","isPlay","slideIndex","showSlides","progressStart","plusSlides","progressPause","togglePlayPauseButtons","progressResume","focusProgress","currentSlide","_loop","frame","setInterval","clearInterval","blur","checkDotColor","resetProgressBar","forEach","bar","preUpdateByUser","postUpdateByUser","currentTabIndex","menuTabsContainer","menuTabs","currentTab","menus","pastaTab","riceTab","sidesTab","openMenu","menuName","currentTarget","display","checkCurrentTabIndex","id","changeTabByKey","click","reservationForm","submitButton","confirmationMessage","closeButton","confirmButton","cancelButton","modalTitle","nameInput","phoneNumberInput","emailInput","guestNumberInput","dateInput","timeInput","timeFirstOption","messageInput","placeholderText","nameError","phoneNumberError","emailError","guestNumberError","dateError","timeError","errorElements","nameValue","phoneValue","emailValue","guestNumberValue","dateValue","timeValue","messageValue","dateOfToday","Date","today","getFormattedDate","dateOfTmr","setDate","getDate","tomorrow","pad","number","date","dd","mm","getMonth","getFullYear","generateDefaultDate","tdyDay","getDay","tdyHour","getHours","tdyMinute","getMinutes","isAfterCutoff","cutoffHour","setDefaultDate","value","min","generateOptionsForRange","endHour","currentHour","currentMinute","hour","minute","optionText","option","Option","generateTimeOptions","now","dayIndex","innerHTML","appendChild","updateAtSpecificTimes","currentTime","selectOption","selectedElement","validateUserImput","trimmedValue","trim","validity","patternMismatch","selectedDate","some","element","alert","nameInputEvent","phoneNumberInputEvent","emailInputEvent","guestNumberInputEvent","dateInputEvent","timeInputEvent","verifyInputs","openModal","textContent","options","selectedIndex","text","encodedMessage","encodeHTML","replace","submitForm","selectedDateComponents","innerText","split","selectedYear","parseInt","selectedMonth","benchmarkDateComponents","benchmarkYear","benchmarkMonth","benchmarkDate","timeComponents","selectedHour","selectedMinute","closeMessage","submit","reset"],"mappings":"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","file":"non-critical-legacy-script.min.js","sourcesContent":["'use strict';\r\n\r\n// ******** VARIABLES ******** //\r\n\r\n// Get the elements inside and around the navbar\r\nconst navbar = document.getElementById(\"navbar\");\r\nconst navbarToggler = document.querySelector('.navbar__toggler');\r\nconst navContainer = document.querySelector('.navbar__collapse');\r\nconst navList = document.querySelector('.navbar__nav');\r\nconst navLinks = document.querySelectorAll('.navbar__nav-link');\r\nconst home = document.getElementById(\"home\");\r\nconst r2link = document.querySelector('.navbar__brand');\r\nconst menuTab1 = (document.getElementsByClassName(\"menu__tab\"))[0];\r\nconst accordionButton1 = (document.getElementsByClassName(\"accordion__button\"))[0];\r\nlet screenWidth, currentScrollPos;\r\n\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\n// Show or hide the collapsible navbar when toggler is clicked\r\nnavbarToggler.addEventListener('click', (event) => {\r\n  // Toggle the visibility of navContainer\r\n  navContainer.classList.toggle('is-opened');\r\n  if (navContainer.style.maxHeight) {\r\n    // If navContainer is open, close it\r\n    navContainer.style.maxHeight = null;\r\n    // Set the toggler NOT to be aria-expanded\r\n    togglerAriaNotExpanded();\r\n    // Set the navlinks to be aria-hidden and tabindex = -1\r\n    navLinkAriaHidden();\r\n  } else {\r\n    // If navContainer is closed, open it\r\n    navContainer.style.maxHeight = navContainer.scrollHeight + \"px\";\r\n    // Focus on the first menu item\r\n    navLinks[0].focus();\r\n    // Set the toggler to be aria-expanded\r\n    togglerAriaExpanded();\r\n    // Set the navlinks NOT to be aria-hidden and tabindex = 0\r\n    navLinkAriaNotHidden();\r\n  }\r\n  event.stopPropagation();\r\n});\r\n\r\n// Hide the collapsible navbar when the nav link is clicked or when the user clicks anywhere outside of the navbar\r\ndocument.addEventListener('click', closeNavbar);\r\n\r\n//Check the screen size onload and assign appropriate aria attributes to HTML elements\r\nwindow.addEventListener('load', checkScreenSize);\r\n\r\n// Handle resize event with debounce\r\n// 1. Close the navbar\r\n// 2. Check the screen size and assign appropriate aria attributes to HTML elements\r\n// 3. Check if needed to adjust the padding-top value of hero-image\r\nwindow.addEventListener('resize', debounce(() => {\r\n  closeNavbar();\r\n  checkScreenSize();\r\n  adjustHeroImagePadding();\r\n  // if (window.innerWidth <= 900) {\r\n  // Update the screenWidth variable with the current window width\r\n  let screenWidth = window.innerWidth;\r\n  if (screenWidth <= 350 || (screenWidth <= 600 && screenWidth > 450)) {\r\n    navbar.style.top = \"0\";\r\n  }\r\n}, 50));\r\n\r\n// Handle scroll event with debounce\r\n// On screen wider than 900px, when the user scrolls down, hide the navbar.\r\n// Show the navbar when the user scrolls up\r\nlet prevScrollPos = window.scrollY;\r\nwindow.addEventListener('scroll', debounce(() => {\r\n  let currentScrollPos = window.scrollY;\r\n\r\n  // Update the screenWidth variable with the current window width\r\n  let screenWidth = window.innerWidth;\r\n  if (screenWidth > 650 || (screenWidth <= 450 && screenWidth > 350)) {\r\n    navbar.style.top = prevScrollPos > currentScrollPos ? \"0\" : \"-500px\";\r\n  }\r\n  prevScrollPos = currentScrollPos;\r\n}, 50));\r\n\r\n// Keydown event when the menu is a collapsible navbar on small screen and is open\r\nwindow.addEventListener('keydown', (event) => {\r\n  const focusedElement = document.activeElement;\r\n  const isNavLinkFocused = Array.prototype.includes.call(navLinks, focusedElement);\r\n  if (navContainer.classList.contains('is-opened')) {\r\n    switch (event.key) {\r\n      // Close the open navbar menu by ESC key\r\n      case 'Escape':\r\n        event.preventDefault();\r\n        closeNavbar();\r\n        break;\r\n      case 'Tab':\r\n        if (event.shiftKey) {\r\n          event.preventDefault();\r\n          closeNavbar();\r\n          navbarToggler.focus();\r\n        } else {\r\n          event.preventDefault();\r\n          closeNavbar();\r\n          menuTab1.focus();\r\n          accordionButton1.focus();\r\n        }\r\n        break;\r\n      case 'Home':\r\n        event.preventDefault();\r\n        navLinks[0].focus();\r\n        break;\r\n      case 'End':\r\n        event.preventDefault();\r\n        navLinks[navLinks.length - 1].focus();\r\n        break;\r\n      case 'ArrowDown':\r\n        event.preventDefault();\r\n        if (isNavLinkFocused) {\r\n          const nextIndex = (Array.prototype.indexOf.call(navLinks, focusedElement) + 1) % navLinks.length;\r\n          navLinks[nextIndex].focus();\r\n        } else {\r\n          navLinks[0].focus();\r\n        }\r\n        break;\r\n      case 'ArrowUp':\r\n        event.preventDefault();\r\n        if (isNavLinkFocused) {\r\n          const prevIndex = (Array.prototype.indexOf.call(navLinks, focusedElement) - 1 + navLinks.length) % navLinks.length;\r\n          navLinks[prevIndex].focus();\r\n        } else {\r\n          navLinks[navLinks.length - 1].focus();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n});\r\n\r\n// Keydown event when the menu is a menu bar on large screen\r\nwindow.addEventListener('keydown', (event) => {\r\n  const focusedElement = document.activeElement;\r\n  const isNavLinkFocused = Array.prototype.includes.call(navLinks, focusedElement);\r\n  if (isNavLinkFocused) {\r\n    switch (event.key) {\r\n      case 'Tab':\r\n        if (event.shiftKey) {\r\n          event.preventDefault();\r\n          closeNavbar();\r\n          r2link.focus();\r\n        } else {\r\n          event.preventDefault();\r\n          closeNavbar();\r\n          menuTab1.focus();\r\n        }\r\n        break;\r\n      case 'Home':\r\n        event.preventDefault();\r\n        navLinks[0].focus();\r\n        break;\r\n      case 'End':\r\n        event.preventDefault();\r\n        navLinks[navLinks.length - 1].focus();\r\n        break;\r\n      case 'ArrowRight':\r\n        event.preventDefault();\r\n        // Get the index of the currently focused element\r\n        const currentIndexRight = Array.prototype.indexOf.call(navLinks, focusedElement);\r\n        // Calculate the index of the next element\r\n        const nextIndexRight = (currentIndexRight + 1) % navLinks.length;\r\n        navLinks[nextIndexRight].focus();\r\n        break;\r\n      case 'ArrowLeft':\r\n        event.preventDefault();\r\n        // Get the index of the currently focused element\r\n        const currentIndexLeft = Array.prototype.indexOf.call(navLinks, focusedElement);\r\n        // Calculate the index of the previous element\r\n        const prevIndexLeft = (currentIndexLeft - 1 + navLinks.length) % navLinks.length;\r\n        navLinks[prevIndexLeft].focus();\r\n        break;\r\n    }\r\n  }\r\n});\r\n\r\nmenuTab1.addEventListener('keydown', (event) => {\r\n  switch (event.key) {\r\n    case 'Tab':\r\n      if (event.shiftKey) {\r\n        navbar.style.top = \"0\";\r\n      }\r\n      break;\r\n  }\r\n})\r\n\r\naccordionButton1.addEventListener('keydown', (event) => {\r\n  switch (event.key) {\r\n    case 'Tab':\r\n      if (event.shiftKey) {\r\n        navbar.style.top = \"0\";\r\n      }\r\n      break;\r\n  }\r\n})\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Debounce function to avoid the bouncing effect\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function (...args) {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func.apply(this, args), wait);\r\n  };\r\n}\r\n\r\n// Functions to set / remove the aria attribute(s) of toggler (aria-expanded)\r\nfunction togglerAriaExpanded() {\r\n  navbarToggler.setAttribute('aria-expanded', 'true');\r\n}\r\n\r\nfunction togglerAriaNotExpanded() {\r\n  navbarToggler.setAttribute('aria-expanded', 'false');\r\n}\r\n\r\nfunction togglerAriaRemoved() {\r\n  navbarToggler.removeAttribute('aria-expanded', 'true');\r\n  navbarToggler.removeAttribute('aria-expanded', 'false');\r\n}\r\n\r\n// Functions to set / remove the aria attributes of navlinks (tabindex and aria-hidden)\r\nfunction navLinkAriaHidden() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].setAttribute('tabindex', '-1');\r\n    navLinks[i].setAttribute('aria-hidden', 'true');\r\n  }\r\n}\r\n\r\nfunction navLinkAriaNotHidden() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].setAttribute('tabindex', '0');\r\n    navLinks[i].setAttribute('aria-hidden', 'false');\r\n  }\r\n}\r\n\r\nfunction navLinkAriaRemoved() {\r\n  for (let i = 0; i < navLinks.length; i++) {\r\n    navLinks[i].removeAttribute('tabindex', '0');\r\n    navLinks[i].removeAttribute('tabindex', '-1');\r\n    navLinks[i].removeAttribute('aria-hidden', 'true');\r\n    navLinks[i].removeAttribute('aria-hidden', 'false');\r\n  }\r\n}\r\n\r\n// Function to close the collapsible navbar\r\nfunction closeNavbar() {\r\n  if (navContainer.classList.contains('is-opened')) {\r\n    navContainer.style.maxHeight = null;\r\n    navContainer.classList.remove('is-opened');\r\n    togglerAriaNotExpanded();\r\n    navLinkAriaHidden();\r\n  }\r\n}\r\n\r\n// Function to adjust the padding top of the hero image according to the screen size\r\nfunction adjustHeroImagePadding() {\r\n  // Update the screenWidth variable with the current window width\r\n  let screenWidth = window.innerWidth;\r\n\r\n  // Check the screenWidth and adjust value of paddingTop accordingly\r\n  home.style.paddingTop = (screenWidth <= 350 || (screenWidth <= 600 && screenWidth > 450)) ? \"70px\" : \"0px\";\r\n}\r\n\r\n// Function to check the screen size and assign aria attributes to HTML elements\r\n// For use when onload and onresize\r\nfunction checkScreenSize() {\r\n  let screenWidth = window.innerWidth;\r\n  // On small screen, set the toggler to be aria-expanded,\r\n  // set the navlinks to be aria-hidden and tabindex = -1\r\n  if (screenWidth <= 576) {\r\n    togglerAriaNotExpanded();\r\n    navLinkAriaHidden();\r\n    navList.setAttribute('role', 'menu');\r\n  }\r\n  // On large screen, remove the aria-expanded attribute of the toggler,\r\n  // remove aria-hidden and tabindex attributes of navlinks\r\n  else {\r\n    togglerAriaRemoved();\r\n    navLinkAriaRemoved();\r\n    navList.setAttribute('role', 'menubar');\r\n  }\r\n}","'use strict';\r\n\r\n// ******** VARIABLES ******** //\r\n\r\n// Get all elements with the class \"accordion__button\"\r\nconst menuAccordion = document.getElementsByClassName(\"accordion__button\");\r\n\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\n// Add event listener for window load to open active panels\r\nwindow.addEventListener('load', openOrClosePanels);\r\n\r\n// Add event listener for window resize to open active panels or remove aria attributes\r\nwindow.addEventListener('resize', openOrClosePanels);\r\n\r\n// Add event listener to the menu accordion to toggle panel open or close\r\nfor (let i = 0; i < menuAccordion.length; i++) {\r\n  menuAccordion[i].addEventListener(\"click\", function () {\r\n    this.classList.toggle(\"accordion__button--active\");\r\n    const isActive = this.classList.contains(\"accordion__button--active\");\r\n    handlePanelState(this, isActive, true); // Always handle click events as small screen actions\r\n  });\r\n}\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Function to handle panel state based on button and screen size\r\nfunction handlePanelState(button, isActive, isSmallScreen) {\r\n  const menuPanel = button.nextElementSibling;\r\n\r\n  // Set aria-expanded attribute\r\n  button.setAttribute('aria-expanded', isActive && isSmallScreen);\r\n\r\n  if (isActive && isSmallScreen) {\r\n    // Open the panel\r\n    menuPanel.classList.add(\"accordion__panel--open\");\r\n    menuPanel.style.maxHeight = menuPanel.scrollHeight + \"px\";\r\n    menuPanel.style.border = \"1px solid rgba(226, 186, 137, 0.842)\";\r\n    menuPanel.setAttribute('role', 'region');\r\n  } else {\r\n    // Close the panel\r\n    menuPanel.classList.remove(\"accordion__panel--open\");\r\n    menuPanel.style.maxHeight = null;\r\n    menuPanel.style.border = \"none\";\r\n    menuPanel.removeAttribute('role', 'region');\r\n  }\r\n}\r\n\r\n// Function to open active panels when window width is <= 450px\r\nfunction openOrClosePanels() {\r\n  const isSmallScreen = window.innerWidth <= 450;\r\n\r\n  for (let i = 0; i < menuAccordion.length; i++) {\r\n    const button = menuAccordion[i];\r\n    const isActive = button.classList.contains(\"accordion__button--active\");\r\n    handlePanelState(button, isActive, isSmallScreen);\r\n  }\r\n}","'use strict';\r\n\r\n// Carousel for small & medium menu\r\n\r\n// ******** VARIABLES ******** //\r\n\r\n// Set the time for autoplay\r\nconst time = 3.5; //3.5 seconds\r\nconst timeInterval = time * 1000 / 100;\r\n\r\n// Get the elements in carousel\r\nconst carouselTrack = document.getElementById(\"carousel__track\");\r\nconst slides = document.getElementsByClassName(\"carousel__slide\");\r\nconst prevButton = document.querySelector(\".carousel__prev-button\");\r\nconst nextButton = document.querySelector(\".carousel__next-button\");\r\nconst playButton = document.querySelector(\".carousel__play-button\");\r\nconst pauseButton = document.querySelector(\".carousel__pause-button\");\r\nconst progressList = document.querySelector(\".carousel__progress-list\");\r\nconst progressContainers = document.getElementsByClassName(\"carousel__progress-container\");\r\nconst progressBars = document.getElementsByClassName(\"carousel__progress-bar\");\r\nconst bar1 = document.getElementById(\"bar1\");\r\nconst bar2 = document.getElementById(\"bar2\");\r\nconst bar3 = document.getElementById(\"bar3\");\r\n\r\n// Create variables for progress bar\r\nlet currentProgressContainer = document.querySelector(\".carousel__progress-container.current-container\");\r\nlet currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\nlet width = 0, memo, dynamicFrame;\r\nlet isPlay = true;\r\n\r\n\r\n// ******** INITIALIZATION ******** //\r\n\r\n// Initialize the slide index to the first slide\r\nlet slideIndex = 1;\r\nshowSlides(slideIndex);\r\nprogressStart();\r\n\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\n// Add event listeners to previous and next buttons\r\nprevButton.addEventListener(\"click\", () => {\r\n  plusSlides(-1);\r\n});\r\n\r\nnextButton.addEventListener(\"click\", () => {\r\n  plusSlides(1);\r\n});\r\n\r\n// Add event listeners to play and pause buttons\r\npauseButton.addEventListener(\"click\", () => {\r\n  progressPause();\r\n  togglePlayPauseButtons();\r\n});\r\n\r\nplayButton.addEventListener(\"click\", () => {\r\n  progressResume();\r\n  togglePlayPauseButtons();\r\n});\r\n\r\n// Add event listeners to progress list\r\nprogressList.addEventListener('keydown', (event) => {\r\n  switch (event.key) {\r\n    case 'ArrowLeft':\r\n      plusSlides(-1);\r\n      focusProgress();\r\n      break;\r\n    case 'ArrowRight':\r\n      plusSlides(1);\r\n      focusProgress();\r\n      break;\r\n    case 'Home':\r\n      event.preventDefault();\r\n      currentSlide(1);\r\n      focusProgress();\r\n      break;\r\n    case 'End':\r\n      event.preventDefault();\r\n      currentSlide(3);\r\n      focusProgress();\r\n      break;\r\n  }\r\n});\r\n\r\n// Add event listeners to each progress container\r\nfor (let i = 0; i < progressContainers.length; i++) {\r\n  progressContainers[i].addEventListener(\"click\", () => {\r\n    currentSlide(1 + i);\r\n  });\r\n}\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Function to display the slide corresponding to the given index 'n'\r\nfunction showSlides(n) {\r\n\r\n  // If 'n' is greater than the number of slides or the current slide index is greater than the number of slides, reset to the first slide\r\n  if (n > slides.length || slideIndex > slides.length) { slideIndex = 1 }\r\n  // If 'n' is less than 1, set the slide index to the last slide\r\n  if (n < 1) { slideIndex = slides.length }\r\n\r\n  // Hide all the slides by removing the 'current-slide' class\r\n  for (let i = 0; i < slides.length; i++) {\r\n    slides[i].classList.remove(\"current-slide\");\r\n    progressContainers[i].classList.remove(\"current-container\");\r\n    progressBars[i].classList.remove(\"current-bar\");\r\n    progressBars[i].setAttribute(\"aria-selected\", \"false\");\r\n    progressBars[i].setAttribute(\"tabindex\", \"-1\");\r\n  }\r\n\r\n  // Show the current slide by adding the 'current-slide' class, and setting 'aria-current' attribute to true\r\n  slides[slideIndex - 1].classList.add(\"current-slide\");\r\n  progressContainers[slideIndex - 1].classList.add(\"current-container\");\r\n  progressBars[slideIndex - 1].classList.add(\"current-bar\");\r\n  progressBars[slideIndex - 1].setAttribute(\"aria-selected\", \"true\");\r\n  progressBars[slideIndex - 1].removeAttribute(\"tabindex\", \"-1\");\r\n}\r\n\r\n// Function to start the progress initially\r\nfunction progressStart() {\r\n  frame();\r\n  dynamicFrame = setInterval(frame, timeInterval);\r\n}\r\n\r\n// Function for the progress bar to advance\r\nfunction frame() {\r\n  currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n  if (width < 100) {\r\n    width++;\r\n    currentProgressBar.style.width = width + \"%\";\r\n    memo = width;\r\n  } else {\r\n    clearInterval(dynamicFrame); // Clear the coming round\r\n    currentProgressBar.blur();\r\n    currentProgressBar.style.width = \"0.75rem\";\r\n    slideIndex++; // Advance to the next slide\r\n    showSlides(slideIndex);\r\n    checkDotColor(slideIndex);\r\n    resetProgressBar();\r\n    progressStart();\r\n    carouselTrack.setAttribute(\"aria-live\", \"off\");\r\n  }\r\n}\r\n\r\n// Function to change the dot color according to the slide position\r\nfunction checkDotColor(slideIndex) {\r\n  [...progressBars].forEach(bar => bar.classList.remove(\"finished-bar\"));\r\n  if (slideIndex === 2) {\r\n    bar1.classList.add(\"finished-bar\");\r\n  }\r\n  if (slideIndex === 3) {\r\n    bar1.classList.add(\"finished-bar\");\r\n    bar2.classList.add(\"finished-bar\");\r\n  }\r\n}\r\n\r\n// Helper function to reset the progress bar\r\nfunction resetProgressBar() {\r\n  currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n  width = 0; // Reset width\r\n  currentProgressBar.style.width = width + \"%\";\r\n  memo = width;\r\n}\r\n\r\n// Function to pause the progress bar running\r\nfunction progressPause() {\r\n  carouselTrack.setAttribute(\"aria-live\", \"polite\");\r\n  isPlay = false;\r\n  clearInterval(dynamicFrame);\r\n}\r\n\r\n// Function to resume the progress bar running\r\nfunction progressResume() {\r\n  carouselTrack.setAttribute(\"aria-live\", \"off\");\r\n  isPlay = true;\r\n  currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n  width = memo; // Restore the width from memo\r\n  if (width < 100) {\r\n    currentProgressBar.style.width = width + \"%\";\r\n    progressStart();\r\n  } else {\r\n    currentProgressBar.style.width = \"0.75rem\";\r\n    slideIndex++; // Advance to the next slide\r\n    showSlides(slideIndex);\r\n    resetProgressBar();\r\n    progressStart();\r\n  }\r\n}\r\n\r\n// Helper function to pre-update the carousel initiated by user\r\nfunction preUpdateByUser() {\r\n  clearInterval(dynamicFrame);\r\n  carouselTrack.setAttribute(\"aria-live\", \"polite\");\r\n  currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n  currentProgressBar.style.width = \"0.75rem\";\r\n}\r\n\r\n// Function to advance the slide by a given number 'n' (positive or negative)\r\nfunction plusSlides(n) {\r\n  preUpdateByUser();\r\n  slideIndex += n;\r\n  showSlides(slideIndex);\r\n  postUpdateByUser();\r\n}\r\n\r\n// Function to display the slide corresponding to a given dot\r\nfunction currentSlide(n) {\r\n  preUpdateByUser();\r\n  slideIndex = n;\r\n  showSlides(slideIndex);\r\n  postUpdateByUser();\r\n}\r\n\r\n// Helper function to post-update the carousel initiated by user\r\nfunction postUpdateByUser() {\r\n  checkDotColor(slideIndex);\r\n  resetProgressBar();\r\n  if (isPlay) {\r\n    progressStart();\r\n  }\r\n}\r\n\r\n// Function to toggle play/pause button visibility and aria-hidden attribute\r\nfunction togglePlayPauseButtons() {\r\n  playButton.classList.toggle(\"hidden\");\r\n  pauseButton.classList.toggle(\"hidden\");\r\n  playButton.setAttribute('aria-hidden', playButton.classList.contains(\"hidden\"));\r\n  pauseButton.setAttribute('aria-hidden', pauseButton.classList.contains(\"hidden\"));\r\n}\r\n\r\n// Function to focus the progress container\r\nfunction focusProgress() {\r\n  currentProgressBar = document.querySelector(\".carousel__progress-bar.current-bar\");\r\n  currentProgressBar.focus();\r\n}","'use strict';\r\n\r\n// ******** VARIABLES ******** //\r\n\r\nconst menuTabsContainer = document.querySelector(\".menu__tabs\");\r\nlet menuTabs = document.getElementsByClassName(\"menu__tab\");\r\nlet currentTab = document.querySelector(\".menu__tab--active\");\r\nlet menus = document.getElementsByClassName(\"menu__panel\");\r\nconst pastaTab = menuTabs[0];\r\nconst riceTab = menuTabs[1];\r\nconst sidesTab = menuTabs[2];\r\nlet i, currentTabIndex;\r\n\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\nmenuTabsContainer.addEventListener('keydown', (event) => {\r\n  menuTabs = document.getElementsByClassName(\"menu__tab\");\r\n\r\n  checkCurrentTabIndex();\r\n\r\n  switch (event.key) {\r\n    case 'ArrowLeft':\r\n      currentTabIndex = currentTabIndex - 1;\r\n      changeTabByKey(currentTabIndex);\r\n      break;\r\n    case 'ArrowRight':\r\n      currentTabIndex = currentTabIndex + 1;\r\n      changeTabByKey(currentTabIndex);\r\n      break;\r\n  }\r\n});\r\n\r\npastaTab.addEventListener(\"click\", (event) => {\r\n  openMenu(event, \"pasta-menu\");\r\n});\r\n\r\nriceTab.addEventListener(\"click\", (event) => {\r\n  openMenu(event, \"rice-menu\");\r\n});\r\n\r\nsidesTab.addEventListener(\"click\", (event) => {\r\n  openMenu(event, \"sides-menu\");\r\n});\r\n\r\n\r\n// ******** INITIALIZATION ******** //\r\n\r\n// Automatically click the tab with the ID \"pasta-tab\" to initialize the menu on page load\r\npastaTab.click();\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Function to open a menu based on a tab click event\r\nfunction openMenu(event, menuName) {\r\n  menuTabs = document.getElementsByClassName(\"menu__tab\");\r\n\r\n  // Loop through each menu tab to deactivate it\r\n  for (i = 0; i < menuTabs.length; i++) {\r\n    menuTabs[i].classList.remove(\"menu__tab--active\");\r\n    menuTabs[i].setAttribute('aria-selected', 'false');\r\n    menuTabs[i].setAttribute('tabindex', '-1');\r\n  }\r\n\r\n  // Activate the clicked tab\r\n  event.currentTarget.classList.add(\"menu__tab--active\");\r\n  event.currentTarget.setAttribute('aria-selected', 'true');\r\n  event.currentTarget.removeAttribute('tabindex', '-1');\r\n\r\n  menus = document.getElementsByClassName(\"menu__panel\");\r\n  // Loop through each menu panel to hide it\r\n  for (i = 0; i < menus.length; i++) {\r\n    menus[i].style.display = \"none\";\r\n  }\r\n\r\n  // Display the selected menu panel\r\n  document.getElementById(menuName).style.display = \"grid\";\r\n}\r\n\r\n// Function to check current tab index\r\nfunction checkCurrentTabIndex() {\r\n  const currentTab = document.querySelector(\".menu__tab--active\");\r\n  switch (currentTab.id) {\r\n    case \"pasta-tab\":\r\n      currentTabIndex = 0;\r\n      break;\r\n    case \"rice-tab\":\r\n      currentTabIndex = 1;\r\n      break;\r\n    case \"sides-tab\":\r\n      currentTabIndex = 2;\r\n      break;\r\n  }\r\n}\r\n\r\n\r\n// Function to change the tab by current tab index\r\nfunction changeTabByKey(currentTabIndex) {\r\n  if (currentTabIndex === 0 || currentTabIndex > 2) {\r\n    pastaTab.click();\r\n    pastaTab.focus();\r\n  } else if (currentTabIndex === 1) {\r\n    riceTab.click();\r\n    riceTab.focus();\r\n  } else if (currentTabIndex === 2 || currentTabIndex < 0) {\r\n    sidesTab.click();\r\n    sidesTab.focus();\r\n  }\r\n}","'use strict';\r\n\r\n// ******** FORM VARIABLES ******** //\r\n\r\n// Get the form elements\r\nconst reservationForm = document.getElementById(\"reservation-form\");\r\nlet submitButton = document.getElementById('formSumbitButton');\r\nlet confirmationMessage = document.getElementById(\"confirmation-message\");\r\nconst closeButton = document.querySelector(\".confirmation-message__close-button\");\r\nlet confirmButton = document.querySelector(\".confirmation-message__confirm-button\");\r\nconst cancelButton = document.querySelector(\".confirmation-message__cancel-button\");\r\nlet modalTitle = document.getElementById(\"modalTitle\");\r\n\r\n// Get the form input elements\r\nlet nameInput = document.getElementById(\"name\");\r\nlet phoneNumberInput = document.getElementById(\"phone\");\r\nlet emailInput = document.getElementById(\"email\");\r\nlet guestNumberInput = document.getElementById('guest-number');\r\nlet dateInput = document.getElementById('date');\r\nlet timeInput = document.getElementById('time');\r\nconst timeFirstOption = document.getElementById('time-first-option');\r\nlet messageInput = document.getElementById(\"optional-message\");\r\nconst placeholderText = '(e.g. Dietary Restriction, Special Occasions)';\r\n\r\n// Get the form error message of input elements\r\nconst nameError = document.getElementById(\"name-error\");\r\nconst phoneNumberError = document.getElementById(\"phone-error\");\r\nconst emailError = document.getElementById(\"email-error\");\r\nconst guestNumberError = document.getElementById(\"guest-number-error\");\r\nconst dateError = document.getElementById(\"date-error\");\r\nconst timeError = document.getElementById(\"time-error\");\r\nconst errorElements = [nameError, phoneNumberError, emailError, guestNumberError, dateError, timeError];\r\n\r\n// Get the form output elements\r\nlet nameValue = document.getElementById(\"name-value\");\r\nlet phoneValue = document.getElementById(\"phone-value\");\r\nlet emailValue = document.getElementById(\"email-value\");\r\nlet guestNumberValue = document.getElementById(\"guest-number-value\");\r\nlet dateValue = document.getElementById(\"date-value\");\r\nlet timeValue = document.getElementById(\"time-value\");\r\nlet messageValue = document.getElementById(\"optional-message-value\");","'use strict';\r\n\r\n// Set default date for date picker\r\n// If the cutoff time has yet to be reached, set today as default date\r\n// If the cutoff time has been reached, set tomorrow as default date\r\n\r\n\r\n// ******** VARIABLES ******** //\r\n\r\n// Get date of today\r\nconst dateOfToday = new Date();\r\nconst today = getFormattedDate(dateOfToday);\r\n\r\n// Get date of tomorrow\r\nconst dateOfTmr = new Date(new Date().setDate(dateOfToday.getDate() + 1));\r\nconst tomorrow = getFormattedDate(dateOfTmr);\r\n\r\n\r\n// ******** INITIALIZATION ******** //\r\n\r\n// Generate default date when the page loads\r\ngenerateDefaultDate();\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Helper function to pad single digit numbers with leading zero\r\nfunction pad(number) {\r\n  return (number < 10 ? '0' : '') + number;\r\n}\r\n\r\n// Function to get the formatted date string (yyyy-mm-dd)\r\nfunction getFormattedDate(date) {\r\n  const dd = date.getDate();\r\n  const mm = date.getMonth() + 1;\r\n  const yyyy = date.getFullYear();\r\n  return yyyy + \"-\" + pad(mm) + \"-\" + pad(dd);\r\n}\r\n\r\n// Function to set default date (.value) and prevent choosing invalid dates (.min)\r\nfunction generateDefaultDate() {\r\n  const tdyDay = dateOfToday.getDay();\r\n  const tdyHour = dateOfToday.getHours();\r\n  const tdyMinute = dateOfToday.getMinutes();\r\n\r\n  const isAfterCutoff = (cutoffHour) => {\r\n    return tdyHour > cutoffHour || (tdyHour === cutoffHour && tdyMinute >= 1);\r\n  };\r\n\r\n  switch (tdyDay) {\r\n    case 0: // Sunday\r\n      setDefaultDate(isAfterCutoff(15));\r\n      break;\r\n    case 5: // Friday\r\n    case 6: // Saturday\r\n      setDefaultDate(isAfterCutoff(19));\r\n      break;\r\n    default: // Monday to Thursday\r\n      setDefaultDate(isAfterCutoff(18));\r\n  }\r\n\r\n  // Helper function to set the default date and min date\r\n  function setDefaultDate(isAfterCutoff) {\r\n    if (isAfterCutoff) {\r\n      dateInput.value = tomorrow;\r\n      dateInput.min = tomorrow;\r\n    } else {\r\n      dateInput.value = today;\r\n      dateInput.min = today;\r\n    }\r\n  }\r\n}","'use strict';\r\n\r\n// Set default time for time picker\r\n\r\n// ******** INITIALIZATION ******** //\r\n\r\n// Generate time options when the page loads\r\ngenerateTimeOptions();\r\n\r\n// Update default date and time every minute\r\n// to ensure the booking time is not outdated\r\nsetInterval(updateAtSpecificTimes, 60 * 1000);\r\n\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\n// Add event listener to date input to generate time options\r\ndateInput.addEventListener('input', generateTimeOptions);\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Helper function to generate time options for a specific range\r\nfunction generateOptionsForRange(endHour, currentHour, currentMinute) {\r\n  for (let hour = 12; hour <= endHour; hour++) {\r\n    for (let minute = 0; minute < 60; minute += 15) {\r\n      if (hour === endHour && (minute === 15 || minute === 30 || minute === 45)) {\r\n        continue;\r\n      }\r\n      if (hour > currentHour + 1 || (hour === currentHour + 1 && minute >= currentMinute)) {\r\n        const optionText = hour + ':' + pad(minute);\r\n        const option = new Option(optionText, optionText); // Set the value same as the text\r\n        timeInput.add(option);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Function to generate time options based on current day and time\r\nfunction generateTimeOptions() {\r\n  const now = new Date();\r\n  const dayIndex = now.getDay();\r\n  const currentHour = now.getHours();\r\n  const currentMinute = now.getMinutes();\r\n\r\n  // Clear existing options (if any)\r\n  timeInput.innerHTML = '';\r\n\r\n  // Add initial option for time (placeholder: Select Time)\r\n  timeInput.appendChild(timeFirstOption);\r\n\r\n  if (dateInput.value === today) {\r\n    switch (dayIndex) {\r\n      case 0: // Sunday\r\n        generateOptionsForRange(16, currentHour, currentMinute);\r\n        break;\r\n      case 5:\r\n      case 6: // Friday & Saturday\r\n        generateOptionsForRange(20, currentHour, currentMinute);\r\n        break;\r\n      default: // Monday to Thursday\r\n        generateOptionsForRange(19, currentHour, currentMinute);\r\n    }\r\n  }\r\n  else if (dateInput.value > today) {\r\n    // If the chosen day is not today\r\n    const selectedDate = new Date(dateInput.value);\r\n    const chosenDay = selectedDate.getDay();\r\n    switch (chosenDay) {\r\n      case 0: // Sunday\r\n        generateOptionsForRange(16, -1, -1);\r\n        break;\r\n      case 5:\r\n      case 6: // Friday & Saturday\r\n        generateOptionsForRange(20, -1, -1);\r\n        break;\r\n      default: // Monday to Thursday\r\n        generateOptionsForRange(19, -1, -1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateAtSpecificTimes() {\r\n  let currentTime = new Date();\r\n  let currentHour = currentTime.getHours();\r\n  let currentMinute = currentTime.getMinutes();\r\n\r\n  // Check if the current time is between 11am and 8pm\r\n  if (currentHour >= 11 && currentHour < 20) {\r\n    // Check if the current minute is 01, 16, 31, or 46\r\n    if (currentMinute === 1 || currentMinute === 16 || currentMinute === 31 || currentMinute === 46) {\r\n      generateDefaultDate();\r\n      generateTimeOptions();\r\n    }\r\n  }\r\n}","'use strict';\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\n// Add event listeners to option elements to change the text color to solid black color\r\nguestNumberInput.addEventListener('change', function () {\r\n    selectOption(guestNumberInput);\r\n});\r\n\r\ntimeInput.addEventListener('change', function () {\r\n    selectOption(timeInput);\r\n});\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Function to change the text color of selected option\r\nfunction selectOption(selectedElement) {\r\n    // Check if a valid option (not the disabled one) is selected\r\n    if (selectedElement.value !== \"\") {\r\n        // If a valid option is selected, add the 'valid' class to change its color\r\n        selectedElement.classList.add('valid');\r\n    } else {\r\n        // If a valid option is yet to be selected, remove the 'valid' class to revert to its default color\r\n        selectedElement.classList.remove('valid');\r\n    }\r\n}","'use strict';\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n// the event listener for the form validation is in the popUpMessage.js\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Form validation on clicking or pressing the submit button\r\n// If the input is incorrect or empty, \r\n// show the error message and attach relevant class (styling) and aria-attributes to the elements\r\nfunction validateUserImput() {\r\n\r\n    //Validate name input\r\n    const trimmedValue = nameInput.value.trim(); // Trim the input value\r\n\r\n    if (nameInput.validity.patternMismatch || trimmedValue.length < 2 || nameInput.value === '') {\r\n        nameInput.classList.add('error-input');\r\n        nameInput.setAttribute('aria-describedby', 'name-error');\r\n        nameInput.setAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"block\";\r\n    } else {\r\n        nameInput.classList.remove('error-input');\r\n        nameError.style.display = \"none\";\r\n    }\r\n\r\n    //Validate phone number input\r\n    if (phoneNumberInput.validity.patternMismatch || phoneNumberInput.value === '') {\r\n        phoneNumberInput.classList.add('error-input');\r\n        phoneNumberInput.setAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.setAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"block\";\r\n    } else {\r\n        phoneNumberInput.classList.remove('error-input');\r\n        phoneNumberError.style.display = \"none\";\r\n    }\r\n\r\n    //Validate email input\r\n    if (emailInput.validity.patternMismatch || emailInput.value === '') {\r\n        emailInput.classList.add('error-input');\r\n        emailInput.setAttribute('aria-describedby', 'email-error');\r\n        emailInput.setAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"block\";\r\n    } else {\r\n        emailInput.classList.remove('error-input');\r\n        emailError.style.display = \"none\";\r\n    }\r\n\r\n    //Validate guest number input\r\n    if (guestNumberInput.value === '') {\r\n        guestNumberInput.classList.add('error-input');\r\n        guestNumberInput.setAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.setAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"block\";\r\n    } else {\r\n        guestNumberInput.classList.remove('error-input');\r\n        guestNumberError.style.display = \"none\";\r\n    }\r\n\r\n    //Validate date input\r\n    // Get the selected date from the date input field\r\n    const selectedDate = new Date(dateInput.value);\r\n    // Get the minimum allowed date from the min attribute of the date input field\r\n    const minDate = new Date(dateInput.min);\r\n\r\n    if (selectedDate < minDate || selectedDate === '') {\r\n        dateInput.classList.add('error-input');\r\n        dateInput.setAttribute('aria-describedby', 'date-error');\r\n        dateInput.setAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"block\";\r\n    } else {\r\n        dateInput.classList.remove('error-input');\r\n        dateError.style.display = \"none\";\r\n    }\r\n\r\n    //Validate time input\r\n    if (timeInput.value === '') {\r\n        timeInput.classList.add('error-input');\r\n        timeInput.setAttribute('aria-describedby', 'time-error');\r\n        timeInput.setAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"block\";\r\n    } else {\r\n        timeInput.classList.remove('error-input');\r\n        timeError.style.display = \"none\";\r\n    }\r\n\r\n    // Alert the user about the erroneous input\r\n    if (errorElements.some(element => element.style.display === \"block\")) {\r\n        alert(\"Please provide valid input.\");\r\n    }\r\n\r\n    // Add event listeners to form elements after the first submission of form,\r\n    // for ongoing validation of inputs\r\n    nameInput.addEventListener('input', nameInputEvent);\r\n    phoneNumberInput.addEventListener('input', phoneNumberInputEvent);\r\n    emailInput.addEventListener('input', emailInputEvent);\r\n    guestNumberInput.addEventListener('input', guestNumberInputEvent);\r\n    dateInput.addEventListener('input', dateInputEvent);\r\n    timeInput.addEventListener('input', timeInputEvent);\r\n};\r\n\r\n// Helper function to continuously validate name input after first submission\r\nfunction nameInputEvent() {\r\n    const letterPattern = /^[A-Za-z\\.' \\-]+$/;\r\n    const trimmedValue = nameInput.value.trim(); // Trim the input value\r\n\r\n    if (trimmedValue.length > 1 && letterPattern.test(trimmedValue)) {\r\n        nameInput.classList.remove('error-input');\r\n        nameInput.removeAttribute('aria-describedby', 'name-error');\r\n        nameInput.removeAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"none\";\r\n    } else {\r\n        nameInput.classList.add('error-input');\r\n        nameInput.setAttribute('aria-describedby', 'name-error');\r\n        nameInput.setAttribute('aria-invalid', 'true');\r\n        nameError.style.display = \"block\";\r\n    }\r\n}\r\n\r\n// Helper function to continuously validate phone number input after first submission\r\nfunction phoneNumberInputEvent() {\r\n    const numberPattern = /[0-9+]/g;\r\n\r\n    if (phoneNumberInput.value.length > 6 && numberPattern.test(phoneNumberInput.value)) {\r\n        phoneNumberInput.classList.remove('error-input');\r\n        phoneNumberInput.removeAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.removeAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"none\";\r\n    } else {\r\n        phoneNumberInput.classList.add('error-input');\r\n        phoneNumberInput.setAttribute('aria-describedby', 'phone-error');\r\n        phoneNumberInput.setAttribute('aria-invalid', 'true');\r\n        phoneNumberError.style.display = \"block\";\r\n    }\r\n}\r\n\r\n// Helper function to continuously validate email input after first submission\r\nfunction emailInputEvent() {\r\n    const emailPattern = /^[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$/;\r\n\r\n    if (emailPattern.test(emailInput.value)) {\r\n        emailInput.classList.remove('error-input');\r\n        emailInput.removeAttribute('aria-describedby', 'email-error');\r\n        emailInput.removeAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"none\";\r\n    } else {\r\n        emailInput.classList.add('error-input');\r\n        emailInput.setAttribute('aria-describedby', 'email-error');\r\n        emailInput.setAttribute('aria-invalid', 'true');\r\n        emailError.style.display = \"block\";\r\n    }\r\n}\r\n\r\n// Helper function to continuously validate guest number input after first submission\r\nfunction guestNumberInputEvent() {\r\n    if (guestNumberInput.value === '') {\r\n        guestNumberInput.classList.add('error-input');\r\n        guestNumberInput.setAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.setAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"block\";\r\n    } else {\r\n        guestNumberInput.classList.remove('error-input');\r\n        guestNumberInput.removeAttribute('aria-describedby', 'guest-number-error');\r\n        guestNumberInput.removeAttribute('aria-invalid', 'true');\r\n        guestNumberError.style.display = \"none\";\r\n    }\r\n}\r\n\r\n// Helper function to continuously validate date input after first submission\r\nfunction dateInputEvent() {\r\n    // Get the selected date from the date input field\r\n    const selectedDate = new Date(dateInput.value);\r\n    // Get the minimum allowed date from the min attribute of the date input field\r\n    const minDate = new Date(dateInput.min);\r\n\r\n    if (selectedDate >= minDate) {\r\n        dateInput.classList.remove('error-input');\r\n        dateInput.removeAttribute('aria-describedby', 'date-error');\r\n        dateInput.removeAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"none\";\r\n    } else {\r\n        dateInput.classList.add('error-input');\r\n        dateInput.setAttribute('aria-describedby', 'date-error');\r\n        dateInput.setAttribute('aria-invalid', 'true');\r\n        dateError.style.display = \"block\";\r\n    }\r\n}\r\n\r\n// Helper function to continuously validate time input after first submission\r\nfunction timeInputEvent() {\r\n    if (timeInput.value === '') {\r\n        timeInput.classList.add('error-input');\r\n        timeInput.setAttribute('aria-describedby', 'time-error');\r\n        timeInput.setAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"block\";\r\n    } else {\r\n        timeInput.classList.remove('error-input');\r\n        timeInput.removeAttribute('aria-describedby', 'time-error');\r\n        timeInput.removeAttribute('aria-invalid', 'true');\r\n        timeError.style.display = \"none\";\r\n    }\r\n}","'use strict';\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\n// Submit form upon confirmation of information\r\nconfirmButton.addEventListener(\"click\", submitForm);\r\n\r\n// Add an event listeners to the submit button to verify the inputs before the confirmation message pops up\r\nsubmitButton.addEventListener('click', verifyInputs);\r\n\r\nsubmitButton.addEventListener('keydown', (event) => {\r\n    switch (event.key) {\r\n        case ' ':\r\n        case 'Enter':\r\n            verifyInputs(event);\r\n            modalTitle = document.getElementById(\"modalTitle\");\r\n            modalTitle.focus();\r\n            break;\r\n    }\r\n})\r\n\r\n// Add an event listeners to the close button to close the message\r\ncloseButton.addEventListener(\"click\", closeMessage);\r\n\r\ncloseButton.addEventListener('keydown', (event) => {\r\n    switch (event.key) {\r\n        case ' ':\r\n        case 'Enter':\r\n            event.preventDefault();\r\n            closeMessage();\r\n            break;\r\n    }\r\n})\r\n\r\n// Add an event listeners to the cancel button to close the message\r\ncancelButton.addEventListener(\"click\", closeMessage);\r\n\r\ncancelButton.addEventListener('keydown', (event) => {\r\n    switch (event.key) {\r\n        case ' ':\r\n        case 'Enter':\r\n            event.preventDefault();\r\n            closeMessage();\r\n            break;\r\n    }\r\n})\r\n\r\n// Keep the focus within the confirmation message when navigating by keyboard\r\n// modalTitle is the first focusable element\r\n// confirmButton is the last focusable element\r\nmodalTitle.addEventListener('keydown', (event) => {\r\n    switch (event.key) {\r\n        case 'Tab':\r\n            if (event.shiftKey) {\r\n                // Handle Shift + Tab\r\n                event.preventDefault(); // Prevent default Tab behavior\r\n                confirmButton = document.querySelector(\".confirmation-message__confirm-button\");\r\n                confirmButton.focus();\r\n            }\r\n            break;\r\n    }\r\n});\r\n\r\nconfirmButton.addEventListener('keydown', (event) => {\r\n    switch (event.key) {\r\n        case 'Tab':\r\n            if (event.shiftKey) {\r\n                // Handle Shift + Tab\r\n                // Default setting\r\n            } else {\r\n                event.preventDefault(); // Prevent default Tab behavior\r\n                modalTitle = document.getElementById(\"modalTitle\");\r\n                modalTitle.focus();\r\n            }\r\n            break;\r\n    }\r\n});\r\n\r\n// Add an event listener to the window to close the message\r\n// If the confirmation message is popped up\r\nwindow.addEventListener('keydown', (event) => {\r\n    if (confirmationMessage.style.display === \"flex\") {\r\n        if (event.key === 'Escape') {\r\n            event.preventDefault();\r\n            closeMessage();\r\n        }\r\n    }\r\n});\r\n\r\n\r\n// ******** FUNCTIONS ******** //\r\n\r\n// Function to verify the inputs before the confirmation message pops up\r\nfunction verifyInputs(event) {\r\n    event.preventDefault();\r\n    validateUserImput();\r\n    if (errorElements.some(element => element.style.display === \"block\")) {\r\n    } else {\r\n        openModal();\r\n    }\r\n}\r\n\r\n// Function to open the modal when the user clicks the form submit button\r\nfunction openModal() {\r\n    confirmationMessage.style.display = \"flex\";\r\n    confirmationMessage.setAttribute('aria-modal', 'true');\r\n\r\n    // Copy the value of inputs or options in the form to confirmation message\r\n    nameValue.textContent = nameInput.value;\r\n    phoneValue.textContent = phoneNumberInput.value;\r\n    emailValue.textContent = emailInput.value;\r\n    guestNumberValue.textContent = guestNumberInput.value;\r\n    dateValue.textContent = dateInput.value;\r\n    timeValue.textContent = timeInput.options[timeInput.selectedIndex].text\r\n\r\n    // If the message input value is blank or default value,\r\n    // the corresponding text in the confirmation message will be N/A\r\n    if (messageInput.value === '' || messageInput.value === '(e.g. Dietary Restriction, Special Occasions)') {\r\n        messageValue.textContent = \"N/A\";\r\n    } else {\r\n        // Encode the message input value to prevent HTML injection\r\n        const encodedMessage = encodeHTML(messageInput.value);\r\n        messageValue.innerHTML = encodedMessage;\r\n    }\r\n}\r\n\r\n// Function to encode HTML entities\r\nfunction encodeHTML(text) {\r\n    return text.replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&#39;')\r\n        .replace(/(\\r\\n|\\n|\\r)/g, '<br>'); // Preserve line breaks\r\n}\r\n\r\n// Function to submit form\r\nfunction submitForm() {\r\n    // Parse the selected date value from the form\r\n    const selectedDateString = dateValue.innerText.trim(); // Get the date string and remove leading/trailing spaces\r\n    const selectedDateComponents = selectedDateString.split('-');\r\n    const selectedYear = parseInt(selectedDateComponents[0]);\r\n    const selectedMonth = parseInt(selectedDateComponents[1]);\r\n    const selectedDate = parseInt(selectedDateComponents[2]);\r\n\r\n    // Set date of today as a benchmark date to do comparison\r\n    const benchmarkDateComponents = today.split('-');\r\n    const benchmarkYear = parseInt(benchmarkDateComponents[0]);\r\n    const benchmarkMonth = parseInt(benchmarkDateComponents[1]);\r\n    const benchmarkDate = parseInt(benchmarkDateComponents[2]);\r\n\r\n    // console.log(\"selected date: \" + selectedDate);\r\n    // console.log(\"benchmark date: \" + benchmarkDate);\r\n\r\n    // Parse the selected time value from the form\r\n    const timeString = timeValue.innerText.trim(); // Get the time string and remove leading/trailing spaces\r\n    const timeComponents = timeString.split(':');\r\n    const selectedHour = parseInt(timeComponents[0]);\r\n    const selectedMinute = parseInt(timeComponents[1]);\r\n\r\n    let currentTime = new Date();\r\n    let currentHour = currentTime.getHours();\r\n    let currentMinute = currentTime.getMinutes();\r\n\r\n    // console.log(\"selected time: \" + timeString);\r\n    // console.log(\"current hour: \" + currentHour);\r\n    // console.log(\"current minute: \" + currentMinute);\r\n\r\n    // Check if the selected date is before today's date or if it's today but the selected time has passed\r\n    if (selectedYear < benchmarkYear || selectedMonth < benchmarkMonth || selectedDate < benchmarkDate || (selectedDate === benchmarkDate && (selectedHour < currentHour + 1 || (selectedHour === currentHour + 1 && selectedMinute < currentMinute)))) {\r\n        alert(\"Please select another available day or time slot.\");\r\n        closeMessage();\r\n        generateDefaultDate();\r\n        generateTimeOptions();\r\n    } else {\r\n        // Trigger form submission\r\n        reservationForm.submit();\r\n        alert(\"Thanks for choosing our restaurant!\\nWe will contact you shortly to confirm your reservation.\");\r\n\r\n        // Hide the following 2 lines if the PHP file is ready\r\n        closeMessage();\r\n        reservationForm.reset();\r\n    }\r\n}\r\n\r\n// Function to close the message\r\nfunction closeMessage() {\r\n    confirmationMessage = document.getElementById(\"confirmation-message\");\r\n    submitButton = document.getElementById('formSumbitButton');\r\n    confirmationMessage.style.display = \"none\";\r\n    confirmationMessage.setAttribute('aria-modal', 'false');\r\n    submitButton.focus();\r\n}","'use strict';\r\n// Textarea in reservation form\r\n// 1. When on focus, clear placeholder \r\n// 2. When input is detected, change the text to solid color\r\n// 3. When it is empty and loses focus, reset the placeholder\r\n\r\n\r\n// ******** EVENT LISTENERS ******** //\r\n\r\n// Clear placeholder when on focus\r\nmessageInput.addEventListener('focus', () => {\r\n  if (messageInput.value.trim() === placeholderText) {\r\n    messageInput.value = ''; // Clear the text\r\n  }\r\n});\r\n\r\n// Change color of messageInput when user inputs\r\nmessageInput.addEventListener('input', () => {\r\n  messageInput.classList.toggle('input', messageInput.value.trim() !== '');\r\n});\r\n\r\n// Reset the placeholder if the messageInput is empty when it loses focus\r\nmessageInput.addEventListener('blur', () => {\r\n  if (messageInput.value.trim() === '') {\r\n    messageInput.value = placeholderText;\r\n    messageInput.classList.remove('input');\r\n  }\r\n});","'use strict';\r\n\r\n// Automatically update the year for the copyright in footer\r\ndocument.getElementById(\"year\").textContent = dateOfToday.getFullYear();"]}